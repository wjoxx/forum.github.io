// –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä—É–º–∞ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
let forumPosts = JSON.parse(localStorage.getItem('forumPosts')) || [
    {
        id: 1,
        title: 'React vs Vue –≤ 2025 –≥–æ–¥—É',
        content: '–ö–∞–∫–æ–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –≤—ã–±—Ä–∞—Ç—å –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞? –ö–∞–∫–∏–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ —É –∫–∞–∂–¥–æ–≥–æ?',
        author: '–ê–ª–µ–∫—Å–µ–π',
        category: 'web',
        date: '2025-10-19T14:30:00',
        comments: [
            {
                author: '–ú–∞—Ä–∏—è',
                content: '–Ø –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é Vue –∏–∑-–∑–∞ –µ–≥–æ –ø—Ä–æ—Å—Ç–æ—Ç—ã –∏ –æ—Ç–ª–∏—á–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏.',
                date: '2025-10-19T15:45:00'
            },
            {
                author: '–î–º–∏—Ç—Ä–∏–π',
                content: 'React –∏–º–µ–µ—Ç –±–æ–ª—å—à–µ –≤–∞–∫–∞–Ω—Å–∏–π –Ω–∞ —Ä—ã–Ω–∫–µ, —á—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –∫–∞—Ä—å–µ—Ä—ã.',
                date: '2025-10-19T16:20:00'
            }
        ]
    },
    {
        id: 2,
        title: '–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç—ã —Å Docker',
        content: '–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–æ–≤–µ—Ç–∞–º–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Dockerfile –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤.',
        author: '–û–ª—å–≥–∞',
        category: 'devops',
        date: '2025-10-18T11:15:00',
        comments: [
            {
                author: '–ò–≤–∞–Ω',
                content: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–Ω–æ–≥–æ—Å—Ç—É–ø–µ–Ω—á–∞—Ç—ã–µ —Å–±–æ—Ä–∫–∏ –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–±—Ä–∞–∑–æ–≤.',
                date: '2025-10-18T12:30:00'
            }
        ]
    },
    {
        id: 3,
        title: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è SQL –∑–∞–ø—Ä–æ—Å–æ–≤',
        content: '–ö–∞–∫–∏–µ –º–µ—Ç–æ–¥—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ SQL –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–∞–º—ã–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –¥–ª—è –±–æ–ª—å—à–∏—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö?',
        author: '–°–µ—Ä–≥–µ–π',
        category: 'database',
        date: '2025-10-17T16:05:00',
        comments: []
    }
];

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ localStorage
function savePosts() {
    localStorage.setItem('forumPosts', JSON.stringify(forumPosts));
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–µ–∫—Ü–∏–π
function showSection(sectionName) {
    // –°–∫—Ä—ã—Ç—å –≤—Å–µ —Å–µ–∫—Ü–∏–∏
    document.querySelectorAll('.content-section').forEach(section => {
        section.classList.remove('active');
    });
    
    // –£–±—Ä–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫
    document.querySelectorAll('.nav-tab').forEach(tab => {
        tab.classList.remove('active');
    });
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å–µ–∫—Ü–∏—é
    document.getElementById(`${sectionName}-section`).classList.add('active');
    
    // –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –≤–∫–ª–∞–¥–∫—É
    event.target.classList.add('active');
    
    // –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
    if (sectionName === 'home') {
        loadRecentPosts();
    } else if (sectionName === 'forum') {
        loadAllPosts();
    }
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
function formatDate(dateString) {
    const date = new Date(dateString);
    const now = new Date();
    const diffMs = now - date;
    const diffMins = Math.floor(diffMs / 60000);
    const diffHours = Math.floor(diffMs / 3600000);
    const diffDays = Math.floor(diffMs / 86400000);
    
    if (diffMins < 1) return '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
    if (diffMins < 60) return `${diffMins} –º–∏–Ω. –Ω–∞–∑–∞–¥`;
    if (diffHours < 24) return `${diffHours} —á. –Ω–∞–∑–∞–¥`;
    if (diffDays < 7) return `${diffDays} –¥–Ω. –Ω–∞–∑–∞–¥`;
    
    return date.toLocaleDateString('ru-RU');
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ—Å—Ç–æ–≤
function loadRecentPosts() {
    const container = document.getElementById('recent-posts');
    const recentPosts = [...forumPosts]
        .sort((a, b) => new Date(b.date) - new Date(a.date))
        .slice(0, 5);
    
    if (recentPosts.length === 0) {
        container.innerHTML = `
            <div class="empty-state">
                <i>üí¨</i>
                <h3>–ü–æ–∫–∞ –Ω–µ—Ç –ø–æ—Å—Ç–æ–≤</h3>
                <p>–ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º, –∫—Ç–æ —Å–æ–∑–¥–∞—Å—Ç –æ–±—Å—É–∂–¥–µ–Ω–∏–µ –Ω–∞ —Ñ–æ—Ä—É–º–µ!</p>
            </div>
        `;
        return;
    }
    
    container.innerHTML = recentPosts.map(post => `
        <div class="post-card">
            <div class="post-header">
                <span class="post-author">${post.author || '–ê–Ω–æ–Ω–∏–º'}</span>
                <span class="post-date">${formatDate(post.date)}</span>
            </div>
            <h3 class="post-title">${post.title}</h3>
            <div class="post-content">${post.content}</div>
            <div class="post-actions">
                <button class="btn btn-outline" onclick="viewPost(${post.id})">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (${post.comments.length})</button>
            </div>
        </div>
    `).join('');
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤
function loadAllPosts() {
    const container = document.getElementById('all-posts');
    const sortedPosts = [...forumPosts].sort((a, b) => new Date(b.date) - new Date(a.date));
    
    if (sortedPosts.length === 0) {
        container.innerHTML = `
            <div class="empty-state">
                <i>üí¨</i>
                <h3>–ü–æ–∫–∞ –Ω–µ—Ç –ø–æ—Å—Ç–æ–≤</h3>
                <p>–ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º, –∫—Ç–æ —Å–æ–∑–¥–∞—Å—Ç –æ–±—Å—É–∂–¥–µ–Ω–∏–µ –Ω–∞ —Ñ–æ—Ä—É–º–µ!</p>
            </div>
        `;
        return;
    }
    
    container.innerHTML = sortedPosts.map(post => `
        <div class="post-card">
            <div class="post-header">
                <span class="post-author">${post.author || '–ê–Ω–æ–Ω–∏–º'}</span>
                <span class="post-date">${formatDate(post.date)}</span>
            </div>
            <h3 class="post-title">${post.title}</h3>
            <div class="post-content">${post.content}</div>
            <div class="post-actions">
                <button class="btn btn-outline" onclick="viewPost(${post.id})">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (${post.comments.length})</button>
            </div>
        </div>
    `).join('');
}

// –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å—Ç–∞
function viewPost(postId) {
    const post = forumPosts.find(p => p.id === postId);
    if (!post) return;
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ—Å—Ç–∞
    const modal = document.createElement('div');
    modal.className = 'modal';
    
    modal.innerHTML = `
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">${post.title}</h2>
                <button class="close-btn" onclick="this.closest('.modal').remove()">√ó</button>
            </div>
            
            <div class="post-card">
                <div class="post-header">
                    <span class="post-author">${post.author || '–ê–Ω–æ–Ω–∏–º'}</span>
                    <span class="post-date">${formatDate(post.date)}</span>
                </div>
                <div class="post-content">${post.content}</div>
            </div>
            
            <div class="comments-section">
                <h3 class="section-title">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (${post.comments.length})</h3>
                
                ${post.comments.length === 0 ? `
                    <div class="empty-state">
                        <p>–ü–æ–∫–∞ –Ω–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤. –ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º!</p>
                    </div>
                ` : post.comments.map(comment => `
                    <div class="comment-card">
                        <div class="comment-header">
                            <span class="comment-author">${comment.author || '–ê–Ω–æ–Ω–∏–º'}</span>
                            <span class="comment-date">${formatDate(comment.date)}</span>
                        </div>
                        <div>${comment.content}</div>
                    </div>
                `).join('')}
                
                <div class="form-container" style="margin-top: 20px;">
                    <h4>–î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</h4>
                    <div class="form-group">
                        <textarea class="form-control" id="comment-content" placeholder="–í–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π..."></textarea>
                    </div>
                    <div class="form-group">
                        <input type="text" class="form-control" id="comment-author" placeholder="–í–∞—à–µ –∏–º—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)">
                    </div>
                    <button class="btn btn-primary" onclick="addComment(${post.id})">–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</button>
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
function addComment(postId) {
    const content = document.getElementById('comment-content').value.trim();
    const author = document.getElementById('comment-author').value.trim();
    
    if (!content) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è');
        return;
    }
    
    const post = forumPosts.find(p => p.id === postId);
    if (!post) return;
    
    post.comments.push({
        author: author || '–ê–Ω–æ–Ω–∏–º',
        content: content,
        date: new Date().toISOString()
    });
    
    savePosts();
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∑–∞–Ω–æ–≤–æ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    document.querySelector('.modal').remove();
    viewPost(postId);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞
function createPost() {
    const title = document.getElementById('post-title').value.trim();
    const content = document.getElementById('post-content').value.trim();
    const author = document.getElementById('post-author').value.trim();
    const category = document.getElementById('post-category').value;
    
    if (!title || !content) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø–æ—Å—Ç–∞');
        return;
    }
    
    const newPost = {
        id: forumPosts.length > 0 ? Math.max(...forumPosts.map(p => p.id)) + 1 : 1,
        title: title,
        content: content,
        author: author || '–ê–Ω–æ–Ω–∏–º',
        category: category,
        date: new Date().toISOString(),
        comments: []
    };
    
    forumPosts.push(newPost);
    savePosts();
    
    // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
    document.getElementById('post-title').value = '';
    document.getElementById('post-content').value = '';
    document.getElementById('post-author').value = '';
    
    alert('–ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!');
    showSection('home');
}

// –ü–æ–∏—Å–∫ –ø–æ—Å—Ç–æ–≤
function setupSearch() {
    const searchInput = document.getElementById('search-posts');
    if (searchInput) {
        searchInput.addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();
            const filteredPosts = forumPosts.filter(post => 
                post.title.toLowerCase().includes(searchTerm) || 
                post.content.toLowerCase().includes(searchTerm) ||
                post.author.toLowerCase().includes(searchTerm)
            );
            
            const container = document.getElementById('all-posts');
            if (filteredPosts.length === 0) {
                container.innerHTML = `
                    <div class="empty-state">
                        <i>üîç</i>
                        <h3>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
                        <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å</p>
                    </div>
                `;
            } else {
                container.innerHTML = filteredPosts.map(post => `
                    <div class="post-card">
                        <div class="post-header">
                            <span class="post-author">${post.author || '–ê–Ω–æ–Ω–∏–º'}</span>
                            <span class="post-date">${formatDate(post.date)}</span>
                        </div>
                        <h3 class="post-title">${post.title}</h3>
                        <div class="post-content">${post.content}</div>
                        <div class="post-actions">
                            <button class="btn btn-outline" onclick="viewPost(${post.id})">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (${post.comments.length})</button>
                        </div>
                    </div>
                `).join('');
            }
        });
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    loadRecentPosts();
    setupSearch();
});
